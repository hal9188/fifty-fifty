name: "Terraform Preview for PR"

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  deploy:
    if: github.event.pull_request.state != 'closed'
    uses: ./.github/workflows/deploy.yaml
    with:
      environment: pr
      pr_number: ${{ github.event.pull_request.number }}
      working_directory: ./terraform/envs/pr
      service_name: ${{ secrets.SERVICE }}-pr-${{ github.event.pull_request.number }}
      image: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
      image_tags: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
    secrets: inherit

  destroy:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create PR Terraform Files
        working-directory: ./terraform/envs
        run: |
          echo 'terraform {
            backend "gcs" {
              bucket = "terraform-state-natural-nimbus"
              prefix = "envs/pr-${{ github.event.pull_request.number }}"
            }
          }' > pr/backend.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.12.1'

      - name: Terraform Init
        working-directory: ./terraform/envs/pr
        run: terraform init

      - name: Terraform Destroy
        env:
          TF_VAR_project: ${{ secrets.PROJECT_ID }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_service_name: ${{ secrets.SERVICE }}-pr-${{ github.event.pull_request.number }}
          TF_VAR_image: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
        run: terraform destroy -auto-approve
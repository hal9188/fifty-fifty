steps:
  # Build Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      ["build", "-t", "gcr.io/$PROJECT_ID/fifty-fifty-app:pr-$BUILD_ID", "."]
  # Push image to Artifact Registry / GCR
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/fifty-fifty-app:pr-$BUILD_ID"]
  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "fifty-fifty-pr-$_PR_NUMBER",
        "--image",
        "gcr.io/$PROJECT_ID/fifty-fifty-app:pr-$BUILD_ID",
        "--region",
        "asia-northeast1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
      ]
  # Comment the deployed URL on the GitHub Pull Request
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: bash
    args:
      - "-c"
      - |
        set -e

        apt-get update && apt-get install -y curl jq

        DEPLOY_URL=$(gcloud run services describe fifty-fifty-pr-$_PR_NUMBER \
          --region=asia-northeast1 \
          --format='value(status.url)')

        echo "‚úÖ Cloud Run URL: $$DEPLOY_URL"

        COMMENT_TAG="<!-- preview-url -->"
        COMMENT_BODY="üöÄ PR Preview deployed to: $$DEPLOY_URL $$COMMENT_TAG"
        RESPONSE=$(curl -s -H "Authorization: token $$GITHUB_TOKEN" \
          "https://api.github.com/repos/$REPO_FULL_NAME/issues/$_PR_NUMBER/comments")
        COMMENT_ID=$(echo "$$RESPONSE" | jq -r ".[] | select(.body | contains(\"$$COMMENT_TAG\")) | .id" | head -n 1)

        REQUEST_METHOD="POST"
        REQUEST_API_ENDPOINT="https://api.github.com/repos/$REPO_FULL_NAME/issues/$_PR_NUMBER/comments"

        if [ -n "$$COMMENT_ID" ]; then
          echo "üìù Updating existing comment ID: $$COMMENT_ID"
          REQUEST_METHOD="PATCH"
          REQUEST_API_ENDPOINT="https://api.github.com/repos/$REPO_FULL_NAME/issues/comments/$$COMMENT_ID"
        else
          echo "üí¨ Creating new comment"
        fi

        curl -s -X $$REQUEST_METHOD \
          -H "Authorization: token $$GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"$$COMMENT_BODY\"}" \
          $$REQUEST_API_ENDPOINT
    secretEnv: ["GITHUB_TOKEN"]

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/gh-token/versions/latest
      env: "GITHUB_TOKEN"

options:
  logging: CLOUD_LOGGING_ONLY

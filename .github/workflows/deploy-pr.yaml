name: "Terraform Preview for PR"

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: 'read'
  id-token: 'write'
  pull-requests: 'write'

jobs:
  preview:
    if: github.event.pull_request.state != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Publish to GCR
        uses: ./.github/actions/publish
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          region: ${{ secrets.REGION }}
          image_tags: |
            ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/pr-${{ github.event.pull_request.number }}:${{ github.sha }}

      - name: Create PR Terraform Files
        working-directory: ./terraform/envs
        run: |
          echo 'terraform {
            backend "gcs" {
              bucket = "terraform-state-natural-nimbus-pr"
              prefix = "envs/pr-${{ github.event.pull_request.number }}"
            }
          }' > pr/backend.tf

      - name: Terraform Apply
        uses: ./.github/actions/terraform-apply
        with:
          working_directory: ./terraform/envs/pr
          project_id: ${{ secrets.PROJECT_ID }}
          region: ${{ secrets.REGION }}
          service_name: ${{ secrets.SERVICE }}-pr-${{ github.event.pull_request.number }}
          image: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/pr-${{ github.event.pull_request.number }}:${{ github.sha }}

      - name: Comment Preview URL on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ Preview deployed to: https://fifty-fifty-pr-${{ github.event.pull_request.number }}-nrrgojequa-an.a.run.app

  destroy:
    if: github.event.pull_request.state == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Create PR Terraform Files
        working-directory: ./terraform/envs
        run: |
          echo 'terraform {
            backend "gcs" {
              bucket = "terraform-state-natural-nimbus-pr"
              prefix = "envs/pr-${{ github.event.pull_request.number }}"
            }
          }' > pr/backend.tf

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.12.1'

      - name: Terraform Init
        working-directory: ./terraform/envs/pr
        run: terraform init

      - name: Terraform Destroy
        working-directory: ./terraform/envs/pr
        env:
          TF_VAR_project: ${{ secrets.PROJECT_ID }}
          TF_VAR_region: ${{ secrets.REGION }}
          TF_VAR_service_name: ${{ secrets.SERVICE }}-pr-${{ github.event.pull_request.number }}
          TF_VAR_image: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/pr-${{ github.event.pull_request.number }}:${{ github.sha }}
        run: terraform destroy -auto-approve

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Delete tfstate from GCS
        run: |
          gsutil rm -r gs://terraform-state-natural-nimbus-pr/envs/pr-${{ github.event.pull_request.number }}/